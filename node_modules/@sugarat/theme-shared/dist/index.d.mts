import matter from 'gray-matter';
import { SiteConfig, ResolvedRouteConfig } from 'vitepress';

/**
 * 获取 markdown 内容中的标题
 */
declare function getDefaultTitle(content: string): string;
/**
 * 获取文件最后修改时间
 * 优先使用 git 命令获取，如果失败则使用 fs.stat 获取
 */
declare function getFileLastModifyTime(url: string): Promise<Date | undefined>;
declare function getFileLastModifyTimeByGit(url: string): Promise<Date | undefined>;
declare function getFileBirthTimeByFs(url: string): Promise<Date | undefined>;
declare function getFileLastModifyTimeByFs(url: string): Promise<Date | undefined>;
declare const EXTERNAL_URL_RE: RegExp;
/**
 * Join two paths by resolving the slash collision.
 */
declare function joinPath(base: string, path: string): string;
declare function withBase(base: string, path: string): string;
declare const grayMatter: typeof matter;
declare function getTextSummary(text: string, count?: number): string;
declare const isWindows: boolean;
declare function slash(p: string): string;
declare function normalizePath(id: string): string;

declare function formatDate(d: any, fmt?: string): string;
declare function formatShowDate(date: Date | string): string;

declare function getVitePressPages(vpConfig: SiteConfig): {
    page: string;
    route: string;
    isRewrite: boolean;
    isDynamic: boolean;
    filepath: string;
    originRoute: string;
    rewriteRoute: string;
    dynamicRoute?: ResolvedRouteConfig | undefined;
    rewritePath?: string | undefined;
}[];
declare function renderDynamicMarkdown(routeFile: string, params: Record<string, any>, content?: string): string;

export { EXTERNAL_URL_RE, formatDate, formatShowDate, getDefaultTitle, getFileBirthTimeByFs, getFileLastModifyTime, getFileLastModifyTimeByFs, getFileLastModifyTimeByGit, getTextSummary, getVitePressPages, grayMatter, isWindows, joinPath, normalizePath, renderDynamicMarkdown, slash, withBase };
